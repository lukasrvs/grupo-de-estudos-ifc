{"ast":null,"code":"import _classCallCheck from \"/home/mauricio/Documents/projetos/react-ge/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/mauricio/Documents/projetos/react-ge/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/mauricio/Documents/projetos/react-ge/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/mauricio/Documents/projetos/react-ge/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/mauricio/Documents/projetos/react-ge/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/mauricio/Documents/projetos/react-ge/src/components/counter/Counter.js\";\nimport React, { Component } from 'react';\nimport './Counter.css';\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter(props) {\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Counter).call(this, props));\n    _this.state = {\n      count: 0\n    };\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"increment\",\n    value: function increment() {\n      this.setState(function (state, props) {\n        return {\n          count: state.count + props.increment\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"counter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, this.props.name, \" ter\\xE1 o incremento de \", this.props.increment, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"count-btn\",\n        onClick: function onClick() {\n          return _this2.increment();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, this.state.count), React.createElement(\"button\", {\n        id: \"count-btn\",\n        onClick: this.increment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, this.state.count));\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nexport default Counter;","map":{"version":3,"sources":["/home/mauricio/Documents/projetos/react-ge/src/components/counter/Counter.js"],"names":["React","Component","Counter","props","state","count","setState","increment","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;;IAEMC,O;;;;;AAEJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAHiB;AAMlB;;;;gCAEW;AACV,WAAKC,QAAL,CAAc,UAACF,KAAD,EAAQD,KAAR;AAAA,eAAmB;AAC/BE,UAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,GAAcF,KAAK,CAACI;AADI,SAAnB;AAAA,OAAd;AAGD;;;6BAEQ;AAAA;;AACP,aACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKJ,KAAL,CAAWK,IADf,+BAC6C,KAAKL,KAAL,CAAWI,SADxD,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAME;AAAQ,QAAA,EAAE,EAAC,WAAX;AAAuB,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACA,SAAL,EAAN;AAAA,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKH,KAAL,CAAWC,KADf,CANF,EAUE;AAAQ,QAAA,EAAE,EAAC,WAAX;AAAuB,QAAA,OAAO,EAAG,KAAKE,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKH,KAAL,CAAWC,KADf,CAVF,CADF;AAgBD;;;;EAjCmBJ,S;;AAoCtB,eAAeC,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Counter.css';\n\nclass Counter extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      count: 0\n    }\n  }\n\n  increment() {\n    this.setState((state, props) => ({\n      count: state.count + props.increment\n    }))\n  }\n\n  render() {\n    return (\n      <div className=\"counter\">\n        { this.props.name } ter√° o incremento de { this.props.increment }\n\n        <br />\n        <br />\n\n        <button id=\"count-btn\" onClick={() => this.increment() }>\n          { this.state.count }\n        </button>\n\n        <button id=\"count-btn\" onClick={ this.increment }>\n          { this.state.count }\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Counter;"]},"metadata":{},"sourceType":"module"}